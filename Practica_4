#include<stdio.h>
#include<pthread.h>
#include<stdlib.h>
#include<unistd.h>

// Función que ejecutará cada hilo
void *multiplicacion(void *argumentos)
{
   int *parametros = (int*)argumentos;
   // Defiminos la variable que servirá para los bucles y definimos una variable para almacenar la multiplicación
   int i, multiplicacion = 1; 
   
   printf("Imprimiendo valores a multiplicar: ");
   
   // Recorremos cada elemento de la matriz
   for(i = 0; i < 9; i++) {
      int valor = *(parametros + i); // Accedemos al valor en la posición i
      printf("%d ", valor); // Imprimimos el valor
      multiplicacion = multiplicacion * valor; // Lo multiplicamos por la variable declarada
   }
   
   printf("\nEl valor de la multiplicacion (info del hilo) es: %d\n\n", multiplicacion);
   
   *(parametros+9) = multiplicacion; // Asignamos la ultima posición de la matriz al cálculo realizado
   
   pthread_exit(NULL); // Terminamos el hilo
}

int main ()
{
   // Creamos la matriz **El ultimo valor hace referencia al espacio en donde se guardará la multiplicación calculada**
   int matriz[3][10] = {{1,2,3,4,5,6,7,8,9},
                       {1,3,5,7,9,11,13,15,17},
                       {2,4,6,8,10,12,14,16,18}};
   
   // Arreglo para identificar cada uno de los hilos
   pthread_t id_hilo[3];
   
   int i = 0;
   
   printf("\nCreacion del hilos...\n\n");
   
   // Bucle en donde le damos los datos que le corresponden a cada uno de los hilos a manejar
   for(i = 0; i < 3; i++) {
   	// Le mandamos la funcion al cada hijo correspondiente y con la fila que le corresponde
        pthread_create(&id_hilo[i], NULL, multiplicacion, (void*)matriz[i]);
   }
   
   printf("\nHilos creados. Esperando su finalizacion...\n\n");
   
   // Esperamos a que finalicen todos los hilos
   for(i = 0; i < 3; i++) {
        pthread_join(id_hilo[i], NULL);
   }
   
   // Imprimimos los valores que cada uno de los hilos reescribieron en la ultima posicion de cada fila de la matriz
   printf("\nLos hilos han finalizado, procedo a leer los datos recibidos...\n");
   printf("Multiplicacion 1: %i\n", matriz[0][9]);
   printf("Multiplicacion 2: %i\n", matriz[1][9]);
   printf("Multiplicacion 3: %i\n", matriz[2][9]);

   return 0;
}

