#include<stdio.h>
#include<pthread.h>
#include<stdlib.h>
#include<unistd.h>

// Función para ejecutar cada hilo
void *multiplicacion(void *argumentos)
{
   int *parametros = (int*)argumentos;
   // Variables para bucle y resultado
   int i, multiplicacion = 1; 
   printf("Imprimiendo valores a multiplicar: ");
   // Recorre la fila de la matriz
   for(i = 0; i < 9; i++) {
      int valor = *(parametros + i); // Obtiene valor de la matriz
      printf("%d ", valor); // Imprime valor
      multiplicacion *= valor; // Multiplica el valor
   }
   printf("\nEl valor de la multiplicacion (info del hilo) es: %d\n\n", multiplicacion);
   *(parametros+9) = multiplicacion; // Guarda resultado en la última posición
   pthread_exit(NULL); // Finaliza el hilo
}

int main ()
{
   // Crea la matriz (última columna almacena la multiplicación)
   int matriz[3][10] = {{1,2,3,4,5,6,7,8,9},
                        {1,3,5,7,9,11,13,15,17},
                        {2,4,6,8,10,12,14,16,18}};
   
   // Arreglo para identificar hilos
   pthread_t id_hilo[3];
   int i = 0;
   printf("\nCreación de hilos...\n\n");
   
   // Crea los hilos y les asigna una fila de la matriz
   for(i = 0; i < 3; i++) {
       pthread_create(&id_hilo[i], NULL, multiplicacion, (void*)matriz[i]);
   }
   printf("\nHilos creados. Esperando su finalización...\n\n");
   // Espera a que los hilos terminen
   for(i = 0; i < 3; i++) {
       pthread_join(id_hilo[i], NULL);
   }
   
   // Muestra los resultados de la multiplicación
   printf("\nLos hilos han finalizado sus procesos.\n");
   for(int i = 0; i < 3; i++) {
      printf("Multiplicación %d: %i\n", i + 1, matriz[i][9]);
   }

   return 0;
}
